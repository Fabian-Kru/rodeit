/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


/** OneOf type helpers */
type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;
type OneOf<T extends any[]> = T extends [infer Only] ? Only : T extends [infer A, infer B, ...infer Rest] ? OneOf<[XOR<A, B>, ...Rest]> : never;

export interface paths {
  "/api/coasters": {
    /**
     * Retrieves the collection of Coaster resources.
     * @description Retrieves the collection of Coaster resources.
     */
    get: operations["api_coasters_get_collection"];
  };
  "/api/coasters/{id}": {
    /**
     * Retrieves a Coaster resource.
     * @description Retrieves a Coaster resource.
     */
    get: operations["api_coasters_id_get"];
  };
  "/api/images": {
    /**
     * Retrieves the collection of Image resources.
     * @description Retrieves the collection of Image resources.
     */
    get: operations["api_images_get_collection"];
  };
  "/api/images/{id}": {
    /**
     * Retrieves a Image resource.
     * @description Retrieves a Image resource.
     */
    get: operations["api_images_id_get"];
  };
  "/api/launches": {
    /**
     * Retrieves the collection of Launch resources.
     * @description Retrieves the collection of Launch resources.
     */
    get: operations["api_launches_get_collection"];
  };
  "/api/launches/{id}": {
    /**
     * Retrieves a Launch resource.
     * @description Retrieves a Launch resource.
     */
    get: operations["api_launches_id_get"];
  };
  "/api/models": {
    /**
     * Retrieves the collection of Model resources.
     * @description Retrieves the collection of Model resources.
     */
    get: operations["api_models_get_collection"];
  };
  "/api/models/{id}": {
    /**
     * Retrieves a Model resource.
     * @description Retrieves a Model resource.
     */
    get: operations["api_models_id_get"];
  };
  "/api/parks": {
    /**
     * Retrieves the collection of Park resources.
     * @description Retrieves the collection of Park resources.
     */
    get: operations["api_parks_get_collection"];
  };
  "/api/parks/{id}": {
    /**
     * Retrieves a Park resource.
     * @description Retrieves a Park resource.
     */
    get: operations["api_parks_id_get"];
  };
  "/api/restraints": {
    /**
     * Retrieves the collection of Restraint resources.
     * @description Retrieves the collection of Restraint resources.
     */
    get: operations["api_restraints_get_collection"];
  };
  "/api/restraints/{id}": {
    /**
     * Retrieves a Restraint resource.
     * @description Retrieves a Restraint resource.
     */
    get: operations["api_restraints_id_get"];
  };
  "/api/statuses": {
    /**
     * Retrieves the collection of Status resources.
     * @description Retrieves the collection of Status resources.
     */
    get: operations["api_statuses_get_collection"];
  };
  "/api/statuses/{id}": {
    /**
     * Retrieves a Status resource.
     * @description Retrieves a Status resource.
     */
    get: operations["api_statuses_id_get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    "Coaster.jsonld-list_coaster": {
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name: string;
      park?: components["schemas"]["Park.jsonld-list_coaster"];
      status?: components["schemas"]["Status.jsonld-list_coaster"];
      rank?: number | null;
    };
    "Coaster.jsonld-read_coaster": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name: string;
      materialType?: components["schemas"]["MaterialType.jsonld-read_coaster"] | null;
      seatingType?: components["schemas"]["SeatingType.jsonld-read_coaster"] | null;
      model?: components["schemas"]["Model.jsonld-read_coaster"] | null;
      speed?: number | null;
      height?: number | null;
      length?: number | null;
      inversionsNumber?: number | null;
      manufacturer?: components["schemas"]["Manufacturer.jsonld-read_coaster"] | null;
      restraint?: components["schemas"]["Restraint.jsonld-read_coaster"] | null;
      launchs?: components["schemas"]["Launch.jsonld-read_coaster"][];
      park?: components["schemas"]["Park.jsonld-read_coaster"];
      status?: components["schemas"]["Status.jsonld-read_coaster"];
      /** Format: date-time */
      openingDate?: string | null;
      /** Format: date-time */
      closingDate?: string | null;
      totalRatings?: number;
      validDuels?: number;
      score?: string | null;
      rank?: number | null;
      mainImage?: components["schemas"]["Image.jsonld-read_coaster"] | null;
    };
    "Country.jsonld-read_coaster": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      name?: string;
    };
    "Country.jsonld-read_park": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      name?: string;
    };
    "Image.jsonld-read_coaster": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      path?: string;
    };
    "Image.jsonld-read_image": {
      "@id"?: string;
      "@type"?: string;
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      coaster?: string;
      credit: string | null;
      path?: string;
    };
    "Launch.jsonld-read_coaster": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      name?: string;
    };
    "Launch.jsonld-read_launch": {
      "@id"?: string;
      "@type"?: string;
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      name?: string;
    };
    "Manufacturer.jsonld-read_coaster": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      name?: string;
    };
    "MaterialType.jsonld-read_coaster": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      name?: string;
    };
    "Model.jsonld-read_coaster": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      name?: string;
    };
    "Model.jsonld-read_model": {
      "@id"?: string;
      "@type"?: string;
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      name?: string;
    };
    "Park.jsonld-list_coaster": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      name?: string;
    };
    "Park.jsonld-read_coaster": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      name?: string;
      country?: components["schemas"]["Country.jsonld-read_coaster"];
    };
    "Park.jsonld-read_park": {
      "@id"?: string;
      "@type"?: string;
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      id?: number;
      name?: string;
      country?: components["schemas"]["Country.jsonld-read_park"];
      latitude?: number | null;
      longitude?: number | null;
    };
    "Restraint.jsonld-read_coaster": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      name?: string;
    };
    "Restraint.jsonld-read_restraint": {
      "@id"?: string;
      "@type"?: string;
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      name?: string;
    };
    "SeatingType.jsonld-read_coaster": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      name?: string;
    };
    "Status.jsonld-list_coaster": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      name?: string;
    };
    "Status.jsonld-read_coaster": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      name?: string;
    };
    "Status.jsonld-read_status": {
      "@id"?: string;
      "@type"?: string;
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      id?: number;
      name?: string;
      isRateable?: boolean;
    };
  };
  responses: {
  };
  parameters: {
  };
  requestBodies: {
  };
  headers: {
  };
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Retrieves the collection of Coaster resources.
   * @description Retrieves the collection of Coaster resources.
   */
  api_coasters_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
        id?: number;
        "id[]"?: number[];
        name?: string;
        manufacturer?: string;
        "manufacturer[]"?: string[];
        "order[id]"?: "asc" | "desc";
        "order[rank]"?: "asc" | "desc";
        "rank[between]"?: string;
        "rank[gt]"?: string;
        "rank[gte]"?: string;
        "rank[lt]"?: string;
        "rank[lte]"?: string;
        "totalRatings[between]"?: string;
        "totalRatings[gt]"?: string;
        "totalRatings[gte]"?: string;
        "totalRatings[lt]"?: string;
        "totalRatings[lte]"?: string;
        "exists[mainImage]"?: boolean;
      };
    };
    responses: {
      /** @description Coaster collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Coaster.jsonld-list_coaster"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
        };
      };
    };
  };
  /**
   * Retrieves a Coaster resource.
   * @description Retrieves a Coaster resource.
   */
  api_coasters_id_get: {
    parameters: {
      path: {
        /** @description Coaster identifier */
        id: string;
      };
    };
    responses: {
      /** @description Coaster resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Coaster.jsonld-read_coaster"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of Image resources.
   * @description Retrieves the collection of Image resources.
   */
  api_images_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
        coaster?: string;
        "coaster[]"?: string[];
      };
    };
    responses: {
      /** @description Image collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Image.jsonld-read_image"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
        };
      };
    };
  };
  /**
   * Retrieves a Image resource.
   * @description Retrieves a Image resource.
   */
  api_images_id_get: {
    parameters: {
      path: {
        /** @description Image identifier */
        id: string;
      };
    };
    responses: {
      /** @description Image resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Image.jsonld-read_image"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of Launch resources.
   * @description Retrieves the collection of Launch resources.
   */
  api_launches_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description Launch collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Launch.jsonld-read_launch"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
        };
      };
    };
  };
  /**
   * Retrieves a Launch resource.
   * @description Retrieves a Launch resource.
   */
  api_launches_id_get: {
    parameters: {
      path: {
        /** @description Launch identifier */
        id: string;
      };
    };
    responses: {
      /** @description Launch resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Launch.jsonld-read_launch"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of Model resources.
   * @description Retrieves the collection of Model resources.
   */
  api_models_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description Model collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Model.jsonld-read_model"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
        };
      };
    };
  };
  /**
   * Retrieves a Model resource.
   * @description Retrieves a Model resource.
   */
  api_models_id_get: {
    parameters: {
      path: {
        /** @description Model identifier */
        id: string;
      };
    };
    responses: {
      /** @description Model resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Model.jsonld-read_model"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of Park resources.
   * @description Retrieves the collection of Park resources.
   */
  api_parks_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description Park collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Park.jsonld-read_park"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
        };
      };
    };
  };
  /**
   * Retrieves a Park resource.
   * @description Retrieves a Park resource.
   */
  api_parks_id_get: {
    parameters: {
      path: {
        /** @description Park identifier */
        id: string;
      };
    };
    responses: {
      /** @description Park resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Park.jsonld-read_park"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of Restraint resources.
   * @description Retrieves the collection of Restraint resources.
   */
  api_restraints_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description Restraint collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Restraint.jsonld-read_restraint"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
        };
      };
    };
  };
  /**
   * Retrieves a Restraint resource.
   * @description Retrieves a Restraint resource.
   */
  api_restraints_id_get: {
    parameters: {
      path: {
        /** @description Restraint identifier */
        id: string;
      };
    };
    responses: {
      /** @description Restraint resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Restraint.jsonld-read_restraint"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of Status resources.
   * @description Retrieves the collection of Status resources.
   */
  api_statuses_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description Status collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Status.jsonld-read_status"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
        };
      };
    };
  };
  /**
   * Retrieves a Status resource.
   * @description Retrieves a Status resource.
   */
  api_statuses_id_get: {
    parameters: {
      path: {
        /** @description Status identifier */
        id: string;
      };
    };
    responses: {
      /** @description Status resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Status.jsonld-read_status"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
}
