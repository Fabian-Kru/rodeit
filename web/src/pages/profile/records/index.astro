---
import { rodeit, captainCoaster } from 'src/api/mod.ts';
import CoasterComponent from 'src/components/coaster.astro';
import ProfileLayout from 'src/components/layouts/profile/index.astro';
import { Record } from 'src/model.ts';
import { getUser, headers } from 'src/session.ts';
import { body_large, display_medium } from 'src/styles/atomic/fonts.css.ts';

import { coaster as coaster_style, coasters } from './index.css.ts';

const user = getUser(Astro.cookies);

if (!user) {
	return Astro.redirect('/login');
}

const userId = Number(user.sub);
const result = await rodeit.GET('/records/user/{user_id}', {
	params: {
		path: {
			user_id: userId,
		},
	},
	headers: headers(Astro.cookies),
});
const data = result.data as
	| Array<{
			id: number;
			rollercoaster_id: number;
			timestamp: string;
			user_id: string;
	  }>
	| undefined;

const records =
	data &&
	((
		await Promise.all(
			data.map(async (record) => {
				const { data: coaster } = await captainCoaster.GET('/api/coasters/{id}', {
					params: {
						path: {
							id: String(record.rollercoaster_id),
						},
					},
				});

				if (!coaster) {
					return undefined;
				}

				const _record: Record = {
					date: new Date(record.timestamp),
					coaster: {
						id: coaster.id as number,
						name: coaster.name,
						park: coaster.park && {
							name: coaster.park.name,
							country: coaster.park.country?.name,
						},
						image: coaster.mainImage?.path,
					},
				};
				return _record;
			})
		)
	).filter((record) => record !== undefined) as Record[]);

if (records) {
	// TODO: this should be done on the server
	records.sort((a, b) => b.date.getTime() - a.date.getTime());
}
---

<ProfileLayout>
	<h1 class={display_medium}>My Records</h1>
	{
		records ? (
			<ol class={coasters}>
				{records.map((record) => (
					<li class={coaster_style}>
						<CoasterComponent
							coaster={record.coaster}
							riddenOn={record.date}
						/>
					</li>
				))}
			</ol>
		) : (
			<p class={body_large}>No records found.</p>
		)
	}
</ProfileLayout>
